{"version":3,"sources":["utilities/Forms.js","components/views/Login.js","components/views/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_classCallCheck","_createClass","key","value","str","test","length","isInvalid","obj","keys","Object","entries","results","map","isRequired","push","_defineProperty","concat","isEmail","validEmail","minLength","assign","apply","_toConsumableArray","result","errors","Login","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","remember","setRemember","_useState7","_useState8","validate","setValidate","_useState9","_useState10","showPassword","setShowPassword","_jsxs","className","children","_jsx","method","onSubmit","e","preventDefault","isValid","validator","validateLogin","alert","autoComplete","type","id","name","placeholder","onChange","target","onClick","checked","currentTarget","htmlFor","href","Link","to","Register","setName","validateRegister","Auth","Router","Switch","Route","path","component","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.fd817cad.chunk.js","sourcesContent":["class Form {\n\n    /**\n     * Validate Login\n     * @param str \n     * @returns boolean\n     */\n    static validEmail(str) {\n        let regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        return regex.test(str);\n    }\n\n    /**\n     * Minimum length of string\n     * @param str \n     * @param length \n     * @returns \n     */\n    static minLength(str, length) {\n        let isInvalid = false;\n\n        if (str.length < length) {\n            isInvalid = true;\n        }\n\n        return isInvalid;\n    }\n\n    /**\n     * Form Validator\n     * @param  obj \n     * @returns \n     */\n    static validator(obj) {\n        let keys = Object.entries(obj);\n        let results = [];\n        let validations = null;\n\n        keys.map((key) => {\n            if ('isRequired' in key[1] && key[1].isRequired) {\n                if (key[1].value.length === 0) {\n                    results.push({\n                        [key[0]]: [`The ${key[0]} is required.`]\n                    });\n                } else {\n                    if ('isEmail' in key[1] && key[1].isEmail) {\n                        let isValidEmail = Form.validEmail(key[1].value);\n\n                        if (!isValidEmail) {\n                            results.push({\n                                [key[0]]: [`The ${key[0]} must be valid email.`]\n                            });\n                        }\n                    }\n\n                    if ('minLength' in key[1] && Form.minLength(key[1].value, key[1].minLength)) {\n                        results.push({\n                            [key[0]]: [`The ${key[0]} must at least ${key[1].minLength} characters.`]\n                        });\n                    }\n                }\n            } else if ('isEmail' in key[1]) {\n                let isValidEmail = Form.validEmail(key[1].value);\n\n                if (!isValidEmail) {\n                    results.push({\n                        [key[0]]: [`The ${key[0]} must be valid email`]\n                    });\n                }\n            } else if ('minLength' in key[1] && Form.minLength(key[1].value, key[1].minLength)) {\n                results.push({\n                    [key[0]]: [`The ${key[0]} must at least ${key[1].minLength} characters.`]\n                });\n            }\n            return results\n        })\n\n        results = Object.assign({}, ...results.map((result) => result))\n\n        if (Object.keys(results).length > 0) {\n            validations = {\n                errors: results\n            }\n        } else {\n            validations = null\n        }\n\n        return validations;\n    }\n}\n\nexport default Form","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from '../../utilities/Forms'\n\nconst Login = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [remember, setRemember] = useState(false);\n    const [validate, setValidate] = useState({});\n    const [showPassword, setShowPassword] = useState(false);\n\n    const validateLogin = () => {\n        let isValid = true;\n\n        let validator = Form.validator({\n            email: {\n                value: email,\n                isRequired: true,\n                isEmail: true\n            },\n            password: {\n                value: password,\n                isRequired: true,\n                minLength: 6\n            }\n        });\n\n        if (validator !== null) {\n            setValidate({\n                validate: validator.errors\n            })\n\n            isValid = false\n        }\n        return isValid;\n    }\n\n    const authenticate = (e) => {\n        e.preventDefault();\n\n        const validate = validateLogin();\n\n        if (validate) {\n            setValidate({});\n            setEmail('');\n            setPassword('');\n            alert('Successfully Login');\n        }\n    }\n\n    const togglePassword = (e) => {\n        if (showPassword) {\n            setShowPassword(false);\n        } else {\n            setShowPassword(true)\n        }\n    }\n\n    return (\n        <div className=\"row g-0 auth-wrapper\">\n            <div className=\"col-12 col-md-5 col-lg-6 h-100 auth-background-col\">\n                <div className=\"auth-background-holder\"></div>\n                <div className=\"auth-background-mask\"></div>\n            </div>\n\n            <div className=\"col-12 col-md-7 col-lg-6 auth-main-col text-center\">\n                <div className=\"d-flex flex-column align-content-end\">\n                    <div className=\"auth-body mx-auto\">\n                        <p>LigoRx® Web-Portal | Login-Reset</p>\n                        <div className=\"auth-form-container text-start\">\n                            <form className=\"auth-form\" method=\"POST\" onSubmit={authenticate} autoComplete={'off'}>\n                                <div className=\"email mb-3\">\n                                    <input type=\"email\"\n                                        className={`form-control ${validate.validate && validate.validate.email ? 'is-invalid ' : ''}`}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        value={email}\n                                        placeholder=\"Email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n\n                                    <div className={`invalid-feedback text-start ${(validate.validate && validate.validate.email) ? 'd-block' : 'd-none'}`} >\n                                        {(validate.validate && validate.validate.email) ? validate.validate.email[0] : ''}\n                                    </div>\n                                </div>\n\n                                <div className=\"password mb-3\">\n                                    <div className=\"input-group\">\n                                        <input type={showPassword ? 'text' : 'password'}\n                                            className={`form-control ${validate.validate && validate.validate.password ? 'is-invalid ' : ''}`}\n                                            name=\"password\"\n                                            id=\"password\"\n                                            value={password}\n                                            placeholder=\"Password\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n\n                                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={(e) => togglePassword(e)} ><i className={showPassword ? 'far fa-eye' : 'far fa-eye-slash'} ></i> </button>\n\n                                        <div className={`invalid-feedback text-start ${(validate.validate && validate.validate.password) ? 'd-block' : 'd-none'}`} >\n                                            {(validate.validate && validate.validate.password) ? validate.validate.password[0] : ''}\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"extra mt-3 row justify-content-between\">\n                                        <div className=\"col-6\">\n                                            <div className=\"form-check\">\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"remember\" checked={remember} onChange={(e) => setRemember(e.currentTarget.checked)} />\n                                                <label className=\"form-check-label\" htmlFor=\"remember\">\n                                                    Remember Me\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-6\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" href=\"https://dev.ligolab.com:5001/training/login_manager\" className=\"btn btn-primary w-100 theme-btn mx-auto\">Log In</button>\n                                </div>\n                            </form>\n\n                            <hr />\n                            <div className=\"auth-option text-center pt-2\">No Account? <Link className=\"text-link\" to=\"/register\">Sign Up </Link></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Login;","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from '../../utilities/Forms'\n\nconst Register = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [validate, setValidate] = useState({});\n    const [showPassword, setShowPassword] = useState(false);\n\n    const validateRegister = () => {\n        let isValid = true;\n\n        let validator = Form.validator({\n            name: {\n                value: name,\n                isRequired: true,\n            },\n            email: {\n                value: email,\n                isRequired: true,\n                isEmail: true\n            },\n            password: {\n                value: password,\n                isRequired: true,\n                minLength: 6\n            }\n        });\n\n        if (validator !== null) {\n            setValidate({\n                validate: validator.errors\n            })\n\n            isValid = false\n        }\n        return isValid;\n    }\n\n    const register = (e) => {\n        e.preventDefault();\n\n        const validate = validateRegister();\n\n        if (validate) {\n            setValidate({});\n            setName('');\n            setEmail('');\n            setPassword('');\n            alert('Successfully Register User');\n        }\n    }\n\n    const togglePassword = (e) => {\n        if (showPassword) {\n            setShowPassword(false);\n        } else {\n            setShowPassword(true)\n        }\n    }\n\n    return (\n        <div className=\"row g-0 auth-wrapper\">\n            <div className=\"col-12 col-md-5 col-lg-6 h-100 auth-background-col\">\n                <div className=\"auth-background-holder\"></div>\n                <div className=\"auth-background-mask\"></div>\n            </div>\n\n            <div className=\"col-12 col-md-7 col-lg-6 auth-main-col text-center\">\n                <div className=\"d-flex flex-column align-content-end\">\n                    <div className=\"auth-body mx-auto\">\n                        <p>LigoRx® Web-Portal | Create Account</p>\n                        <div className=\"auth-form-container text-start\">\n                            <form className=\"auth-form\" method=\"POST\" onSubmit={register} autoComplete={'off'}>\n\n                                <div className=\"name mb-3\">\n                                    <input type=\"text\"\n                                        className={`form-control ${validate.validate && validate.validate.name ? 'is-invalid ' : ''}`}\n                                        id=\"name\"\n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Username\"\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n\n                                    <div className={`invalid-feedback text-start ${(validate.validate && validate.validate.name) ? 'd-block' : 'd-none'}`} >\n                                        {(validate.validate && validate.validate.name) ? validate.validate.name[0] : ''}\n                                    </div>\n                                </div>\n\n                                <div className=\"email mb-3\">\n                                    <input type=\"email\"\n                                        className={`form-control ${validate.validate && validate.validate.email ? 'is-invalid ' : ''}`}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        value={email}\n                                        placeholder=\"Email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n\n                                    <div className={`invalid-feedback text-start ${(validate.validate && validate.validate.email) ? 'd-block' : 'd-none'}`} >\n                                        {(validate.validate && validate.validate.email) ? validate.validate.email[0] : ''}\n                                    </div>\n                                </div>\n\n                                <div className=\"password mb-3\">\n                                    <div className=\"input-group\">\n                                        <input type={showPassword ? 'text' : 'password'}\n                                            className={`form-control ${validate.validate && validate.validate.password ? 'is-invalid ' : ''}`}\n                                            name=\"password\"\n                                            id=\"password\"\n                                            value={password}\n                                            placeholder=\"Password\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n\n                                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={(e) => togglePassword(e)} ><i className={showPassword ? 'far fa-eye' : 'far fa-eye-slash'} ></i> </button>\n\n                                        <div className={`invalid-feedback text-start ${(validate.validate && validate.validate.password) ? 'd-block' : 'd-none'}`} >\n                                            {(validate.validate && validate.validate.password) ? validate.validate.password[0] : ''}\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" href=\"https://dev.ligolab.com:5001/training/login_manager\" className=\"btn btn-primary w-100 theme-btn mx-auto\">Sign Up</button>\n                                </div>\n                            </form>\n\n                            <hr />\n                            <div className=\"auth-option text-center pt-2\">Already Have an Account? <Link className=\"text-link\" to=\"/login\" >Sign in</Link></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Register;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/views/Login\";\nimport Register from \"./components/views/Register\";\n\nconst Auth = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/' component={Login} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Auth;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/scss/auth.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}